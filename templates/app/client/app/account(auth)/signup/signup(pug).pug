.container
  .row
    .col-sm-12
      h1<% if (filters.i18nSupport) { %>(translate="SIGN_UP")<% } else { %> Sign up<% } %> 
    .col-sm-12
      form.form(name='form', ng-submit='vm.register(form)', novalidate='')
        .form-group(ng-class='{ "has-success": form.name.$valid && vm.submitted,\
        "has-error": form.name.$invalid && vm.submitted }')
          label<% if (filters.i18nSupport) { %>(translate="NAME")<% } else { %> Name<% } %>
          input.form-control(type='text', name='name', ng-model='vm.user.name', required='')
          p.help-block(ng-show='form.name.$error.required && vm.submitted'<% if (filters.i18nSupport) { %> translate="NAME_REQUIRED_MSG"<% } %>)
            | <% if (!filters.i18nSupport) { %>A name is required<% } %>

        .form-group(ng-class='{ "has-success": form.email.$valid && vm.submitted,\
        "has-error": form.email.$invalid && vm.submitted }')
          label<% if (filters.i18nSupport) { %>(translate="EMAIL")<% } else { %> Email<% } %>
          input.form-control(type='email', name='email', ng-model='vm.user.email', required='', mongoose-error='')
          p.help-block(ng-show='form.email.$error.email && vm.submitted'<% if (filters.i18nSupport) { %> translate="EMAIL_INVALID_FORMAT_MSG"<% } %>)
            | <% if (!filters.i18nSupport) { %>Doesn't look like a valid email.<% } %>
          p.help-block(ng-show='form.email.$error.required && vm.submitted'<% if (filters.i18nSupport) { %> translate="EMAIL_QUESTION_MSG"<% } %>)
            | <% if (!filters.i18nSupport) { %>What's your email address?<% } %>
          p.help-block(ng-show='form.email.$error.mongoose')
            | {{ vm.errors.email <% if (filters.i18nSupport) { %>| translate<% } %>}}

        .form-group(ng-class='{ "has-success": form.password.$valid && vm.submitted,\
        "has-error": form.password.$invalid && vm.submitted }')
          label<% if (filters.i18nSupport) { %>(translate="PASSWORD")<% } else { %> Password<% } %>
          input.form-control(type='password'
            name='password'
            ng-model='vm.user.password'
            mongoose-error=''
            ng-minlength='3', required='')

          p.help-block(ng-show='(form.password.$error.minlength || form.password.$error.required) && vm.submitted'<% if (filters.i18nSupport) { %> translate="PASSWORD_LENGTH_MSG"<% } %>)
            | <% if (!filters.i18nSupport) { %>Password must be at least 3 characters.<% } %>
          p.help-block(ng-show='form.password.$error.mongoose')
            | {{ vm.errors.password <% if (filters.i18nSupport) { %>| translate<% } %>}}

        .form-group(ng-class='{ "has-success": form.confirmPassword.$valid && vm.submitted,\
        "has-error": form.confirmPassword.$invalid && vm.submitted }')
          label<% if (filters.i18nSupport) { %>(translate="CONFIRM_PASSWORD")<% } else { %> Confirm Password<% } %>
          input.form-control(type='password'
            name='confirmPassword'
            ng-model='vm.user.confirmPassword'
            match="vm.user.password"
            ng-minlength='3', required='')
          p.help-block(ng-show='form.confirmPassword.$error.match && vm.submitted'<% if (filters.i18nSupport) { %> translate="PASSWORDS_MATCH_MSG"<% } %>)
            | <% if (!filters.i18nSupport) { %>Passwords must match.<% } %>

        div
          button.btn.btn-inverse.btn-lg.btn-register(type='submit'<% if (filters.i18nSupport) { %> translate="SIGN_UP"<% } %>)
            | <% if (!filters.i18nSupport) { %>Sign up<% } %>
          = ' '
          a.btn.btn-default.btn-lg.btn-login(<% if (filters.uirouter) { %>ui-sref='login'<% } else { %>href='/login'<% } %><% if (filters.i18nSupport) { %> translate="LOGIN"<% } %>)
            | <% if (!filters.i18nSupport) { %>Login<% } %>
<% if (filters.oauth) {%>
        hr

        .row
          .col-sm-4.col-md-3
            oauth-buttons(classes='btn-block')
<% } %>
  hr
